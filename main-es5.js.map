{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/window-ref.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","HomeComponent","route","afStore","zone","winRef","cookieService","http","userId","snapshot","paramMap","get","emailId","getGstValue","r","gstAmt","parseInt","userPlanSet","userPlanList","getUserData","post","merchantServer","toPromise","planId","paymentId","userPlanId","paymentSuccess","redirectToApp","window","location","href","posts","doc","data","regUser","amount","parentPlanId","rzp","nativeWindow","key","name","description","prefill","theme","color","handler","paymentHandler","bind","modal","ondismiss","run","open","res","razorpay_payment_id","addCheckUser","getWindow","_window","WindowRefService","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\n\n\nconst routes: Routes = [\n  // iKQytl\n{ path: '', redirectTo: 'home/na/na',  pathMatch: 'full' },\n  { path: 'home/:email/:userid', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'glimpse';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport {environment} from '../environments/environment';\nimport {AngularFireModule} from '@angular/fire';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport {AngularFireStorageModule} from '@angular/fire/storage';\nimport {FormsModule} from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, // firestore\n    AngularFireAuthModule, // auth\n    AngularFireStorageModule,\n    FormsModule,\n    HttpClientModule,\n    // storage\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n  <h3>Glimpse Payment</h3>\n</div>\n<hr>\n\n<div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n  <form>\n    <div class=\"form-group\">\n      <div *ngFor=\"let obj of userPlanList\" class=\"columns\">\n        <ul class=\"price\">\n          <li class=\"header\">{{ obj.title }}</li>\n\n          <!-- Pricing -->\n          <li *ngIf=\"obj.pricing != obj.displayAmount\" class=\"grey\"><s>Rs. {{ obj.pricing }}</s></li>\n          <!-- Display Amount -->\n          <li class=\"grey\">Rs. {{ obj.pricing }}<span *ngIf=\"gstAmt > 0\"> + {{ gstAmt }}% GST</span></li>\n\n          <li *ngFor=\"let j of obj.features\">{{ j }}</li>\n          <li class=\"grey\">\n            <button (click)=\"doPayment(obj.pricing, obj.userPlanId)\" class=\"btn btn-outline-primary\">Select Plan ->\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </form>\n</div>\n","import {Component, NgZone, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AngularFirestore} from '@angular/fire/firestore';\nimport {ICustomWindow, WindowRefService} from '../window-ref.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\ninterface UserPlan {\n  userPlanId: string;\n  displayAmount: number;\n  duration: number;\n  features: Array<string>;\n  pricing: number;\n  title: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.less']\n})\nexport class HomeComponent implements OnInit {\n\n  public userId: string;\n  public emailId: string;\n  public paymentId: string;\n  public userPlanList: UserPlan;\n  public parentPlanId: string;\n  public gstAmt: number;\n\n  // rzor pay starts here\n  public rzp: any;\n  // tslint:disable-next-line:variable-name\n  private _window: ICustomWindow;\n\n  // rzor pay starts ends here\n  constructor(private route: ActivatedRoute,\n              public afStore: AngularFirestore,\n              private zone: NgZone,\n              private winRef: WindowRefService,\n              private cookieService: CookieService,\n              private http: HttpClient) {\n    this.http = http;\n  }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.paramMap.get('userid');\n    this.emailId = this.route.snapshot.paramMap.get('email');\n\n    this.getGstValue().then(r => {\n      this.gstAmt = parseInt(r['gstShare']);\n    });\n\n    this.userPlanSet().then(r => {\n      this.userPlanList = r;\n    });\n\n    this.getUserData();\n  }\n\n  async userPlanSet() {\n    return this.http.post<UserPlan>(environment.merchantServer + 'userPlans/getAllPaymentPlans/', {}).toPromise();\n  }\n\n  async addCheckUser(planId) {\n    await this.http.post(environment.merchantServer + 'userManagement/confirmPayment/', {\n      emailId: this.emailId,\n      paymentId: this.paymentId,\n      userPlanId: planId,\n      paymentSuccess: true\n    }).toPromise();\n\n    await this.redirectToApp();\n  }\n\n  redirectToApp() {\n    window.location.href = 'https://glimpsevc.com/b';\n  }\n\n  getUserData() {\n    const posts = this.afStore.doc(`users/${this.emailId}`);\n    const data = this.regUser().then(r => {\n    });\n  }\n\n  regUser() {\n    return this.http.post(environment.merchantServer + 'userManagement/registerUser/', {\n      emailId: this.emailId\n    }).toPromise();\n  }\n\n  doPayment(amount, planId): void {\n    this.parentPlanId = planId;\n    this.rzp = new this.winRef.nativeWindow['Razorpay']({\n      key: 'rzp_live_aIOxiqLOFaYWYS',\n      name: 'Glimpse',\n      description: 'Subscription Fees',\n      amount: (amount + (amount * (this.gstAmt / 100))) * 100,\n      prefill: {\n        name: 'Glimpse'\n      },\n      theme: {\n        color: '#3880FF',\n      },\n      handler: this.paymentHandler.bind(this),\n      modal: {\n        ondismiss: () => {\n          this.zone.run(() => {\n            // add routing if it fails\n          });\n        },\n      },\n    });\n    this.rzp.open();\n  }\n\n  getGstValue() {\n    return this.http.post(environment.merchantServer + 'getStatic/', {\n      keys: ['gstShare']\n    }).toPromise();\n  }\n\n  paymentHandler(res: any) {\n    this.paymentId = res.razorpay_payment_id;\n    this.addCheckUser(this.parentPlanId);\n    this.zone.run(() => {\n      // add API call here\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface ICustomWindow extends Window {\n  _custom_global_stuff: string;\n}\n\nfunction getWindow(): any {\n  return window;\n}\n\nfunction _window(): any {\n  // return the global native browser window object\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WindowRefService {\n  constructor() {}\n\n  get nativeWindow(): ICustomWindow {\n    return getWindow();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase : {\n    apiKey: 'AIzaSyBVRNeEGE8K0we1t6MvoxnkiuhP6hxI6Lg',\n    authDomain: 'glimpsevc.firebaseapp.com',\n    databaseURL: 'https://glimpsevc.firebaseio.com',\n    projectId: 'glimpsevc',\n    storageBucket: 'glimpsevc.appspot.com',\n    messagingSenderId: '246295296459',\n    appId: '1:246295296459:web:94367e61956a747cd21e4e'\n  },\n  merchantServer: 'https://houndmerchant.pythonanywhere.com/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}